{"ast":null,"code":"var _jsxFileName = \"/Users/noahneglia/Desktop/chatapp/client/src/components/Index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport indexCss from \"../CSS/index.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Index = () => {\n  _s();\n\n  // notice that we pass a callback function to initialize the socket\n  // we don't need to destructure the 'setSocket' function since we won't be updating the socket state\n  const [results, setResults] = useState(\"\");\n  const [send, setSend] = useState(\"\");\n  const [socket] = useState(() => io(':8000'));\n  useEffect(() => {\n    // we need to set up all of our event listeners\n    // in the useEffect callback function\n    console.log('Is this running?');\n    socket.on(\"send_data_to_all_other_clients\", data => {\n      setResults(prevResults => {\n        return [data, ...prevResults];\n      });\n    });\n  }, []);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    socket.emit(\"event_from_client\", Object.values(send)[0]);\n    console.log(Object.values(send));\n  };\n\n  const onChangeHandler = e => {\n    setSend({ ...send,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: index,\n      children: results\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"send\",\n        onChange: onChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Index, \"zaYMLdGaLn8eZiu6XuCkHRzilNk=\");\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"names":["React","useState","useEffect","io","indexCss","Index","results","setResults","send","setSend","socket","console","log","on","data","prevResults","submitHandler","e","preventDefault","emit","Object","values","onChangeHandler","target","name","value","index"],"sources":["/Users/noahneglia/Desktop/chatapp/client/src/components/Index.jsx"],"sourcesContent":["\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\n\nimport indexCss from \"../CSS/index.module.css\"\n\n \nconst Index = () =>{\n  // notice that we pass a callback function to initialize the socket\n  // we don't need to destructure the 'setSocket' function since we won't be updating the socket state\n  const [results, setResults] = useState(\"\")\n  const [send, setSend] = useState(\"\")\n  const [socket] = useState(() => io(':8000'));\n\n\n \n  useEffect(() => {\n    // we need to set up all of our event listeners\n    // in the useEffect callback function\n    console.log('Is this running?');\n     socket.on(\"send_data_to_all_other_clients\", data =>{\n        setResults(prevResults =>{\n            return [data, ...prevResults]\n\n        })\n    });\n  }, []);\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n\n    socket.emit(\"event_from_client\", Object.values(send)[0])\n    console.log(Object.values(send))\n\n    \n}\n\nconst onChangeHandler = (e) => {\n    setSend({\n       ...send,\n       [e.target.name]: e.target.value\n    })\n    \n\n}\n  \n \n  return (\n    <div className=\"App\">\n      <h1 className={index}>{results}</h1>\n      <form onSubmit={submitHandler}>\n          <input type=\"text\" name='send' onChange={onChangeHandler} />\n          <button type='submit'>send</button>\n      </form>\n    </div>\n  );\n}\n \nexport default Index;\n"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,EAAP,MAAe,kBAAf;AAEA,OAAOC,QAAP,MAAqB,yBAArB;;;AAGA,MAAMC,KAAK,GAAG,MAAK;EAAA;;EACjB;EACA;EACA,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;EACA,MAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACS,MAAD,IAAWT,QAAQ,CAAC,MAAME,EAAE,CAAC,OAAD,CAAT,CAAzB;EAIAD,SAAS,CAAC,MAAM;IACd;IACA;IACAS,OAAO,CAACC,GAAR,CAAY,kBAAZ;IACCF,MAAM,CAACG,EAAP,CAAU,gCAAV,EAA4CC,IAAI,IAAG;MAChDP,UAAU,CAACQ,WAAW,IAAG;QACrB,OAAO,CAACD,IAAD,EAAO,GAAGC,WAAV,CAAP;MAEH,CAHS,CAAV;IAIH,CALA;EAMF,CAVQ,EAUN,EAVM,CAAT;;EAYA,MAAMC,aAAa,GAAIC,CAAD,IAAO;IAC3BA,CAAC,CAACC,cAAF;IAEAR,MAAM,CAACS,IAAP,CAAY,mBAAZ,EAAiCC,MAAM,CAACC,MAAP,CAAcb,IAAd,EAAoB,CAApB,CAAjC;IACAG,OAAO,CAACC,GAAR,CAAYQ,MAAM,CAACC,MAAP,CAAcb,IAAd,CAAZ;EAGH,CAPC;;EASF,MAAMc,eAAe,GAAIL,CAAD,IAAO;IAC3BR,OAAO,CAAC,EACL,GAAGD,IADE;MAEL,CAACS,CAAC,CAACM,MAAF,CAASC,IAAV,GAAiBP,CAAC,CAACM,MAAF,CAASE;IAFrB,CAAD,CAAP;EAMH,CAPD;;EAUE,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE;MAAI,SAAS,EAAEC,KAAf;MAAA,UAAuBpB;IAAvB;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAM,QAAQ,EAAEU,aAAhB;MAAA,wBACI;QAAO,IAAI,EAAC,MAAZ;QAAmB,IAAI,EAAC,MAAxB;QAA+B,QAAQ,EAAEM;MAAzC;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAQ,IAAI,EAAC,QAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AASD,CAjDD;;GAAMjB,K;;KAAAA,K;AAmDN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}