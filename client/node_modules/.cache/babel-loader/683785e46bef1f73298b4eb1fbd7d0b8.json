{"ast":null,"code":"var _jsxFileName = \"/Users/noahneglia/Desktop/chatapp/client/src/components/Index.jsx\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport io from 'socket.io-client';\nimport indexCss from \"../CSS/index.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Index = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  // notice that we pass a callback function to initialize the socket\n  // we don't need to destructure the 'setSocket' function since we won't be updating the socket state\n  const [results, setResults] = useState([]);\n  const [send, setSend] = useState(\"\");\n  const [yourMessages, setYourMessages] = useState([]);\n  const [socket] = useState(() => io(':8000'));\n\n  const Messages = _ref => {\n    _s();\n\n    let {\n      yourMessages\n    } = _ref;\n    const messagesEndRef = useRef(null);\n\n    const scrollToBottom = () => {\n      var _messagesEndRef$curre;\n\n      (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    };\n\n    useEffect(() => {\n      scrollToBottom();\n    }, [yourMessages]);\n  };\n\n  _s(Messages, \"0epSoi03NVSoD0I0FiLK4iVNXOA=\");\n\n  useEffect(() => {\n    // we need to set up all of our event listeners\n    // in the useEffect callback function\n    console.log('Is this running?');\n    socket.on(\"send_data_to_all_other_clients\", data => {\n      setResults(prevResults => {\n        return [data, ...prevResults];\n      });\n    });\n    socket.on(\"console\", data => {\n      console.log(data);\n    });\n  }, []);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    socket.emit(\"event_from_client\", Object.values(send));\n    setYourMessages(prevResults => {\n      return [Object.values(send)[0], ...prevResults];\n    });\n    console.log(yourMessages);\n  };\n\n  const onChangeHandler = e => {\n    setSend({\n      send,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: indexCss.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: indexCss.messageContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: indexCss.yours,\n        children: yourMessages.map((vals, idx) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: indexCss.yourTexts,\n              children: vals\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this)\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: indexCss.theirs,\n        children: results.map((val, idx) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: indexCss.theirTexts,\n              children: val\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 29\n            }, this)\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      id: indexCss.flex,\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"send\",\n        onChange: onChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Index, \"fjUgVdtjLJIKVklpAZEXNhHsfmk=\");\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"names":["React","useState","useEffect","useRef","io","indexCss","Index","results","setResults","send","setSend","yourMessages","setYourMessages","socket","Messages","messagesEndRef","scrollToBottom","current","scrollIntoView","behavior","console","log","on","data","prevResults","submitHandler","e","preventDefault","emit","Object","values","onChangeHandler","target","name","value","container","messageContainer","yours","map","vals","idx","yourTexts","theirs","val","theirTexts","flex"],"sources":["/Users/noahneglia/Desktop/chatapp/client/src/components/Index.jsx"],"sourcesContent":["\nimport React, { useState, useEffect, useRef } from 'react';\nimport io from 'socket.io-client';\n\nimport indexCss from \"../CSS/index.module.css\"\n\n \nconst Index = () =>{\n  // notice that we pass a callback function to initialize the socket\n  // we don't need to destructure the 'setSocket' function since we won't be updating the socket state\n  const [results, setResults] = useState([])\n  const [send, setSend] = useState(\"\")\n  const [yourMessages, setYourMessages] = useState([])\n  \n\n\n  const [socket] = useState(() => io(':8000'));\n\n  const Messages = ({ yourMessages }) => {\n\n  const messagesEndRef = useRef(null)\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" })\n  }\n\n  useEffect(() => {\n    scrollToBottom()\n  }, [yourMessages]);\n\n}\n\n\n \n  useEffect(() => {\n    // we need to set up all of our event listeners\n    // in the useEffect callback function\n    console.log('Is this running?');\n     socket.on(\"send_data_to_all_other_clients\", data =>{\n        setResults(prevResults =>{\n            \n            return [data, ...prevResults]\n\n        })\n    });\n    socket.on(\"console\", data =>{\n      console.log(data)\n  });\n  }, []);\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    socket.emit(\"event_from_client\", Object.values(send))\n    \n\n    setYourMessages(prevResults =>{\n        \n\n        return [Object.values(send)[0], ...prevResults]\n\n    })\n\n    console.log(yourMessages)\n\n   \n    \n}\n\nconst onChangeHandler = (e) => {\n    setSend({\n       send,\n       [e.target.name]: e.target.value\n    })\n    \n\n}\n  \n \n  return (\n    <div className={indexCss.container}>\n      <div className={indexCss.messageContainer}>\n\n\n      \n      \n        <div className={indexCss.yours}>\n          {\n                        yourMessages.map((vals, idx) => {\n                            return(\n                        <div key={idx}>\n                            <h3 className={indexCss.yourTexts}>{vals}</h3>\n                        </div>\n                        \n                        \n                        \n                    \n                            )\n                        })\n                      }\n                      \n                      </div>\n                        \n                      <div className={indexCss.theirs}>\n                          {\n                        results.map((val, idx) => {\n                            return(\n                      \n                        <div key={idx}>\n                            <h3 className={indexCss.theirTexts}>{val}</h3>\n                        </div>\n                        \n \n                            )\n                        })\n                        }\n                      </div>\n                  \n                  \n                      \n      </div>\n      <form id={indexCss.flex} onSubmit={submitHandler}>\n          <input type=\"text\" name='send' onChange={onChangeHandler} />\n          <button type='submit'>send</button>\n      </form>\n    </div>\n  );\n}\n \nexport default Index;\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}