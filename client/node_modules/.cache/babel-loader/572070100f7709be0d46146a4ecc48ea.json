{"ast":null,"code":"var _jsxFileName = \"/Users/noahneglia/Desktop/chatapp/client/src/components/Index.jsx\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport io from 'socket.io-client';\nimport indexCss from \"../CSS/index.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Index = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  // notice that we pass a callback function to initialize the socket\n  // we don't need to destructure the 'setSocket' function since we won't be updating the socket state\n  const [results, setResults] = useState([]);\n  const [send, setSend] = useState(\"\");\n  const [yourMessages, setYourMessages] = useState([]);\n  const yourMsgsRev = yourMessages.slice().reverse();\n  const resultsRev = results.slice().reverse();\n  const [socket] = useState(() => io(':8000'));\n\n  const AlwaysScrollToBottom = () => {\n    _s();\n\n    const elementRef = useRef();\n    useEffect(() => elementRef.current.scrollIntoView());\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: elementRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, this);\n  };\n\n  _s(AlwaysScrollToBottom, \"CKe/C9l/PZDcdMrjDfTWxieUegY=\");\n\n  useEffect(() => {\n    // we need to set up all of our event listeners\n    // in the useEffect callback function\n    console.log('Is this running?');\n    socket.on(\"send_data_to_all_other_clients\", data => {\n      setResults(prevResults => {\n        return [data, ...prevResults];\n      });\n    });\n    socket.on(\"console\", data => {\n      console.log(data);\n    });\n  }, []);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    socket.emit(\"event_from_client\", Object.values(send));\n    setYourMessages(prevResults => {\n      return [Object.values(send)[0], ...prevResults];\n    });\n    console.log(yourMessages);\n  };\n\n  const onChangeHandler = e => {\n    setSend({\n      send,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: indexCss.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: indexCss.messageContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: indexCss.yours,\n        children: reversed.map((vals, idx) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: indexCss.yourTexts,\n              children: vals\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(AlwaysScrollToBottom, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: indexCss.theirs,\n        children: results.map((val, idx) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: indexCss.theirTexts,\n              children: val\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(AlwaysScrollToBottom, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 29\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      id: indexCss.flex,\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"send\",\n        onChange: onChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Index, \"fjUgVdtjLJIKVklpAZEXNhHsfmk=\");\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"names":["React","useState","useEffect","useRef","io","indexCss","Index","results","setResults","send","setSend","yourMessages","setYourMessages","yourMsgsRev","slice","reverse","resultsRev","socket","AlwaysScrollToBottom","elementRef","current","scrollIntoView","console","log","on","data","prevResults","submitHandler","e","preventDefault","emit","Object","values","onChangeHandler","target","name","value","container","messageContainer","yours","reversed","map","vals","idx","yourTexts","theirs","val","theirTexts","flex"],"sources":["/Users/noahneglia/Desktop/chatapp/client/src/components/Index.jsx"],"sourcesContent":["\nimport React, { useState, useEffect, useRef } from 'react';\nimport io from 'socket.io-client';\n\nimport indexCss from \"../CSS/index.module.css\"\n\n \nconst Index = () =>{\n  // notice that we pass a callback function to initialize the socket\n  // we don't need to destructure the 'setSocket' function since we won't be updating the socket state\n  const [results, setResults] = useState([])\n  const [send, setSend] = useState(\"\")\n  const [yourMessages, setYourMessages] = useState([])\n\n  const yourMsgsRev = yourMessages.slice().reverse();\n  const resultsRev = results.slice().reverse()\n\n  \n\n\n  const [socket] = useState(() => io(':8000'));\n \n\n\n  const AlwaysScrollToBottom = () => {\n    const elementRef = useRef();\n    useEffect(() => elementRef.current.scrollIntoView());\n    return <div ref={elementRef} />;\n  };\n  \n\n \n  useEffect(() => {\n    // we need to set up all of our event listeners\n    // in the useEffect callback function\n    console.log('Is this running?');\n     socket.on(\"send_data_to_all_other_clients\", data =>{\n        setResults(prevResults =>{\n            \n            return [data, ...prevResults]\n\n        })\n    });\n    socket.on(\"console\", data =>{\n      console.log(data)\n  });\n  }, []);\n\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    socket.emit(\"event_from_client\", Object.values(send))\n    \n\n    setYourMessages(prevResults =>{\n        \n\n        return [Object.values(send)[0], ...prevResults]\n\n    })\n\n    console.log(yourMessages)\n\n   \n    \n}\n\nconst onChangeHandler = (e) => {\n    setSend({\n       send,\n       [e.target.name]: e.target.value\n    })\n    \n\n}\n  \n \n  return (\n    <div className={indexCss.container}>\n      <div className={indexCss.messageContainer}>\n\n\n      \n      \n        <div className={indexCss.yours}>\n          {\n                        reversed.map((vals, idx) => {\n                            return(\n                        <div key={idx}>\n                            <h3 className={indexCss.yourTexts}>{vals}</h3>\n                            <AlwaysScrollToBottom/>\n                        </div>\n                        \n                        \n                        \n                    \n                            )\n                        })\n                      }\n                      \n                      </div>\n                        \n                      <div className={indexCss.theirs}>\n                          {\n                        results.map((val, idx) => {\n                            return(\n                      \n                        <div key={idx}>\n                            <h3 className={indexCss.theirTexts}>{val}</h3>\n                            <AlwaysScrollToBottom/>\n                        </div>\n                        \n \n                            )\n                        })\n                        }\n                      </div>\n                  \n                  \n        \n\n      </div>\n      \n      \n      <form id={indexCss.flex} onSubmit={submitHandler}>\n          <input type=\"text\" name='send' onChange={onChangeHandler} />\n          <button type='submit'>send</button>\n      </form>\n    </div>\n  );\n}\n \nexport default Index;\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}